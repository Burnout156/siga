package br.gov.jfrj.siga.integracao.ws.pubnet.mapping;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2022-08-24T10:49:00.653-03:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "pubnet",
                  wsdlLocation = "https://pubnetdes.imprensaoficial.com.br/wspubnet/pubnet.asmx?wsdl",
                  targetNamespace = "http://pubnet.imprensaoficial.com.br/wspubnet")
public class Pubnet extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://pubnet.imprensaoficial.com.br/wspubnet", "pubnet");
    public final static QName PubnetSoap12 = new QName("http://pubnet.imprensaoficial.com.br/wspubnet", "pubnetSoap12");
    public final static QName PubnetSoap = new QName("http://pubnet.imprensaoficial.com.br/wspubnet", "pubnetSoap");
    static {
        URL url = null;
        try {
            url = new URL("https://pubnetdes.imprensaoficial.com.br/wspubnet/pubnet.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Pubnet.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://pubnetdes.imprensaoficial.com.br/wspubnet/pubnet.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Pubnet(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Pubnet(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Pubnet() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Pubnet(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Pubnet(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Pubnet(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns PubnetSoap
     */
    @WebEndpoint(name = "pubnetSoap12")
    public PubnetSoap getPubnetSoap12() {
        return super.getPort(PubnetSoap12, PubnetSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PubnetSoap
     */
    @WebEndpoint(name = "pubnetSoap12")
    public PubnetSoap getPubnetSoap12(WebServiceFeature... features) {
        return super.getPort(PubnetSoap12, PubnetSoap.class, features);
    }


    /**
     *
     * @return
     *     returns PubnetSoap
     */
    @WebEndpoint(name = "pubnetSoap")
    public PubnetSoap getPubnetSoap() {
        return super.getPort(PubnetSoap, PubnetSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PubnetSoap
     */
    @WebEndpoint(name = "pubnetSoap")
    public PubnetSoap getPubnetSoap(WebServiceFeature... features) {
        return super.getPort(PubnetSoap, PubnetSoap.class, features);
    }

}
